Ext.namespace("AuIt","AuIt.Editor");AuIt.Editor.Datefield=Ext.extend(Ext.form.DateField,{getValue:function(){var a=AuIt.Editor.Datefield.superclass.getValue.call(this);return AuIt.Editor.utils.decodeDate(a,AuIt.Editor.utils.dateLocalFormat)},onTriggerClick:function(){if(this.disabled){return}if(this.menu==null){this.menu=new Ext.menu.DateMenu({hideOnClick:false,focusOnSelect:false})}this.onFocus();Ext.apply(this.menu.picker,{minDate:this.minValue,maxDate:this.maxValue,disabledDatesRE:this.disabledDatesRE,disabledDatesText:this.disabledDatesText,disabledDays:this.disabledDays,disabledDaysText:this.disabledDaysText,format:this.format,showToday:this.showToday,minText:String.format(this.minText,this.formatDate(this.minValue)),maxText:String.format(this.maxText,this.formatDate(this.maxValue))});var a=AuIt.Editor.Datefield.superclass.getValue.call(this);this.menu.picker.setValue(a||new Date());this.menu.show(this.el,"tl-bl?");this.menuEvents("on")}});Ext.reg("auit_datefield",AuIt.Editor.Datefield);AuIt.Editor.TimeField=Ext.extend(Ext.form.TimeField,{format:"H:i",getValue:function(){var a=AuIt.Editor.TimeField.superclass.getValue.call(this);return a}});Ext.reg("auit_timefield",AuIt.Editor.TimeField);AuIt.ArrayCombo=Ext.extend(Ext.form.ComboBox,{allowBlank:false,valueField:"value",displayField:"text",editable:false,typeAhead:false,mode:"local",triggerAction:"all",selectOnFocus:true,initComponent:function(){this.options=this.options?this.options:[];this.store=new Ext.data.ArrayStore({id:0,autoDestroy:true,fields:["value","text"],data:this.options}),AuIt.ArrayCombo.superclass.initComponent.apply(this,arguments)}});AuIt.ModalWindow=Ext.extend(Ext.Window,{modal:true,maximizable:true,width:700,height:400,dshow:false,text_OK:AuIt.locale.OK,text_CANCEL:AuIt.locale.CANCEL,text_APPLY:AuIt.locale.APPLY,beforeShow:function(){AuIt.ModalWindow.superclass.beforeShow.call(this);if(this.x<0||this.y<0){this.x=this.y=0;this.el.setLeftTop(0,0)}},addButtons:function(){if(this.useAPLLYBUTTON&&this.u("A")){this.buttons.unshift({text:this.text_APPLY,handler:function(){this.onApply()},scope:this})}this.buttons.unshift({text:this.text_CANCEL,handler:function(){this[this.closeAction]()},scope:this});if(this.u("O")){this.buttons.unshift({text:this.text_OK,handler:function(){if(this.onOK()!==false){this[this.closeAction]()}},scope:this})}},initComponent:function(){if(!this.buttons){this.buttons=[]}this.addButtons();this.keys={key:27,handler:function(){this[this.closeAction]()},scope:this};AuIt.ModalWindow.superclass.initComponent.apply(this,arguments)},setPropInfo:function(a){if(this.field.propInfo){this.field.propInfo.grid.setValueAt(this.field.propInfo.rowIndex,a)}},onStartEnd:function(a){if(this.field){this.field.inEditor=a}if(this.field&&!a){this.field.triggerBlur()}},onShow:function(){this.dshow=true;if(this.onStartEnd){this.onStartEnd(true)}AuIt.ModalWindow.superclass.onShow.apply(this,arguments)},onHide:function(){if(this.onStartEnd&&this.dshow){this.onStartEnd(false)}AuIt.ModalWindow.superclass.onHide.apply(this,arguments)},onApply:function(){alert("AuIt.ModalWindow no onApply")},onOK:function(){this.onApply()},u:function(a){return(!this.y||(AuIt.Editor.utils.n==1))}});Ext.namespace("Ext.ux.form");Ext.override(Ext.Panel,{undock:function(){(function(){var a=this.ownerCt;a.remove(this,false);this.header.setVisibilityMode(Ext.Element.DISPLAY);this.header.hide();if(!this.floatWindow){this.floatWindow=new AuIt.ModalWindow({id:this.id+"_Window",modal:false,iconCls:this.iconCls,closable:false,closeAction:"hide",title:this.title,layout:"fit",floating:true,width:800,height:600,items:this,tools:[{id:"pin",qtip:AuIt.locale.EXTPANEL_REDOCK,handler:function(){this.floatWindow.hide();this.floatWindow.remove(this,false);this.header.setVisibilityMode(Ext.Element.VISIBILITY);this.header.show();this.collapse();if(!this.dockIndex){a.add(this)}else{a.insert(this.dockIndex-1,this)}a.doLayout(true);a.getLayout().setActiveItem(this)},scope:this}]})}else{this.floatWindow.add(this)}a.doLayout();this.floatWindow.show();this.expand()}).defer(10,this)}});Ext.ux.form.MultiComboBox=Ext.extend(Ext.form.ComboBox,{listClass:"multicombobox",initList:function(){if(!this.multiselect){Ext.ux.form.MultiComboBox.superclass.initList.call(this);return}Ext.ux.form.MultiComboBox.superclass.initList.call(this);this.view.multiSelect=true},expand:function(){Ext.ux.form.MultiComboBox.superclass.expand.call(this);this.viewisActive=true},getValue:function(){if(this.multiselect){var c=this.store.getCount();var a=this.view;if(a&&this.viewisActive){this.multiValue=[];var b=a.getSelectedRecords();var d=a.getSelectionCount();b.each(function(e){this.multiValue.push(e.get(this.valueField))},this);return this.multiValue.join(",")}return this.multiValue?this.multiValue.join(","):""}return Ext.ux.form.MultiComboBox.superclass.getValue.call(this)},getLabel:function(e){var b=[];var c=function(i){return i.get(g)==f};for(var d=0;d<e.length;d++){var g=this.valueField;var f=e[d];var a=this.store.findBy(c);var h=this.store.getAt(a);if(h){b.push(h.get(this.displayField))}}return b.join(", ")},setValue:function(a){if(a==undefined){return}if(this.multiselect){if(a&&!Ext.isArray(a)&&a.split){a=a.split(",")}if(a[0]==="0"){a[0]=0}if(!this.multiValue){this.multiValue=[]}if(!a||(Ext.isArray(a)&&a.length===0)){this.multiValue=[];this.clearValue();return}else{if(Ext.isArray(a)){this.multiValue=a;a=this.getLabel(a)}}Ext.ux.form.MultiComboBox.superclass.setValue.call(this,a.replace(/\s/g,""));if(this.multiValue){this.value=this.multiValue}return}Ext.ux.form.MultiComboBox.superclass.setValue.call(this,a)},onSelect:function(b,c){if(this.fireEvent("beforeselect",this,b,c)!==false){if(!this.multiselect){this.setValue(b.data[this.valueField||this.displayField]);this.collapse()}else{var a=this.view;if(a){this.multiValue=[];var d=a.getSelectedRecords();d.each(function(e){this.multiValue.push(e.get(this.valueField))},this);this.setValue(this.multiValue)}}this.fireEvent("select",this,b,c)}},selectByValue:function(c,e){if(!this.multiselect){return Ext.ux.form.MultiComboBox.superclass.selectByValue.call(this,c,e)}if(this.multiValue){var b=this.multiValue;for(var d=0;d<b.length;d++){var a=this.store.findExact(this.valueField,b[d]);this.view.select(a,true)}return true}return false},onViewClick:function(a){Ext.ux.form.MultiComboBox.superclass.onViewClick.call(this,a);if(this.view.getSelectionCount()===0){this.setValue(null)}},onViewOver:function(b,a){if(!this.multiselect){Ext.ux.form.MultiComboBox.superclass.onViewOver.call(this,b,a)}},beforeBlur:function(){if(!this.multiselect){Ext.ux.form.MultiComboBox.superclass.beforeBlur.call(this)}else{this.setValue(this.multiValue)}}});Ext.reg("multiCombo",Ext.ux.form.MultiComboBox);Ext.ux.form.GroupingComboBox=Ext.extend(Ext.ux.form.MultiComboBox,{initComponent:function(){if(this.transform){this.allowDomMove=false;var k=Ext.getDom(this.transform);if(!this.hiddenName){this.hiddenName=k.name}if(!this.store){this.mode="local";var f=[],a=k.options;for(var c=0,e=a.length;c<e;c++){var b=a[c];var g=(Ext.isIE?b.getAttributeNode("value").specified:b.hasAttribute("value"))?b.value:b.text;if(b.selected){this.value=g}var j=b.parentNode,h=j.tagName.toLowerCase()=="optgroup"?j.label:false;f.push([g,b.text,h])}this.store=new Ext.data.SimpleStore({id:0,fields:["value","text","group"],data:f});this.valueField="value";this.displayField="text";this.groupField="group"}k.name=Ext.id();if(!this.lazyRender){this.target=true;this.el=Ext.DomHelper.insertBefore(k,this.autoCreate||this.defaultAutoCreate);Ext.removeNode(k);this.render(this.el.parentNode)}else{Ext.removeNode(k)}}delete this.transform;Ext.ux.form.GroupingComboBox.superclass.initComponent.call(this)},initList:function(){if(!this.list&&!this.tpl){this.tpl='<tpl for="."><tpl if="values.'+this.groupField+" && (xindex == 1 || parent[xindex - 2]."+this.groupField+" != values."+this.groupField+')"><div class="x-combo-list-group">{'+this.groupField+'}</div></tpl><div class="x-combo-list-item" style="<tpl if="values.'+this.groupField+'"></tpl><tpl if="!values.'+this.displayField+' ">display:none;</tpl>" >{'+this.displayField+"}</div></tpl>"}Ext.ux.form.GroupingComboBox.superclass.initList.call(this)}});Ext.reg("GroupingComboBox",Ext.ux.form.GroupingComboBox);Ext.ux.Spotlight2=function(a){Ext.apply(this,a)};Ext.ux.Spotlight2.prototype={active:false,animate:true,duration:0.25,easing:"easeNone",animated:false,createElements:function(){var a=this.pBody;this.right=a.createChild({cls:"x-spotlight"});this.left=a.createChild({cls:"x-spotlight"});this.top=a.createChild({cls:"x-spotlight"});this.bottom=a.createChild({cls:"x-spotlight"});this.all=new Ext.CompositeElement([this.right,this.left,this.top,this.bottom])},show:function(b,c,a){if(this.animated){this.show.defer(50,this,[b,c,a]);return}this.el=Ext.get(b);if(!this.right){this.createElements()}if(!this.active){this.all.setDisplayed("");this.applyBounds(true,false);this.active=true;Ext.EventManager.onWindowResize(this.syncSize,this);this.applyBounds(false,this.animate,false,c,a)}else{this.applyBounds(false,false,false,c,a)}},hide:function(b,a){if(this.animated){this.hide.defer(50,this,[b,a]);return}Ext.EventManager.removeResizeListener(this.syncSize,this);this.applyBounds(true,this.animate,true,b,a)},doHide:function(){this.active=false;this.all.setDisplayed(false)},syncSize:function(){this.applyBounds(false,false)},applyBounds:function(e,d,k,j,l){var i=this.el.getRegion();var h=this.pBody.getRegion();var a=h.right;var g=h.bottom;var f=0,b=false;if(d){b={callback:function(){f++;if(f==4){this.animated=false;if(k){this.doHide()}Ext.callback(j,l,[this])}},scope:this,duration:this.duration,easing:this.easing};this.animated=true}this.right.setBounds(i.right,(e?g:i.top),(a-i.right),(e?0:(g-i.top)),b);this.left.setBounds(h.left,h.top,i.left-h.left,(e?0:i.bottom)-h.top,b);this.top.setBounds((e?a:i.left),h.top,(e?0:a-i.left),i.top-h.top,b);this.bottom.setBounds(h.left,i.bottom,(e?0:i.right)-h.left,g-i.bottom,b);if(!d){if(k){this.doHide()}if(j){Ext.callback(j,l,[this])}}},destroy:function(){this.doHide();Ext.destroy(this.right,this.left,this.top,this.bottom);delete this.el;delete this.all}};